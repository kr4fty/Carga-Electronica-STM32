; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;
; Seleccione un entorno, de acuerdo al tipo de programador utilizado
;   SOLO descomente el entorno que usar√°
;
[platformio]
;default_envs = nanoatmega328       ; Atmega328, Solo para Prueba. NO FUNCIONAL AHORA!
;default_envs = wroom               ; ESP32, Solo para Prueba. NO FUNCIONAL AHORA!
;default_envs = generic_dfu         ; STM32
;default_envs = generic_hid_dapboot ; STM32
default_envs = generic_hid          ; STM32, Tiene la ventaja de no tener que estar cambiando los jumpers cada vez que queremos grabar
;default_envs = generic_serial      ; STM32
;default_envs = generic_stlinkv2    ; STM32
;default_envs = generic_qemu        ; STM32, Para ser virtualizado mediante PICSIMLAB


[env:nanoatmega328]
platform = atmelavr
board = nanoatmega328new
framework = arduino
build_flags =
   -D LED_BUILTIN=13
   -D LCD_SCLK_PIN=7
   -D LCD_DIN_PIN=6
   -D LCD_DC_PIN=5
   -D LCD_CS_PIN=4
   -D LCD_RST_PIN=3
   -D LCD_BKLIGHT_PIN=2

lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:wroom]
platform = espressif32
;board = denky32
board = esp32dev
framework = arduino
build_flags =
	-D LED_BUILTIN  =2
    -D LCD_SCLK_PIN=36
    -D LCD_DIN_PIN =39
    -D LCD_DC_PIN  =34
    -D LCD_CS_PIN  =35
    -D LCD_RST_PIN =32
    -D LCD_BKLIGHT_PIN=2
;	-D CORE_DEBUG_LEVEL=4
upload_port = /dev/ttyUSB0

lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:generic_dfu] ; Usando bootloader generic_boot20_pc13.bin
platform = ststm32
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
;board_build.core = maple
framework = arduino
upload_protocol = dfu
upload_command = dfu-util -a 2 -D $SOURCE

build_flags =
;            -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC -Os

lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1
lib_ignore =

[env:generic_dfu_dapboot] ;usando booloader dapboot-v1.20-bluepill.bin
platform = ststm32
board = bluepill_f103c8_128k
framework = arduino
; change microcontroller
board_build.mcu = stm32f103c8t6

upload_protocol = dfu
upload_command = dfu-util -D $SOURCE
;upload_port = /dev/ttyACM0
build_flags =
; 	         -D LED_BUILTIN=PC13

lib_deps = 
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:generic_hid] ; Usando bootloader hid_bootloader.bin, https://github.com/MS1987/STM32_HID_Bootloader
platform = ststm32
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
;board_build.core = maple
framework = arduino
upload_protocol = hid
build_flags = 
            -D PIO_FRAMEWORK_ARDUINO_ENABLE_HID
            -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC -Os
; 	         -D LED_BUILTIN=PC13

lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:generic_serial] ; Usando el serial port (PA9 y PA10)
platform = ststm32
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
;board_build.core = maple
framework = arduino
upload_protocol = serial
;upload_port = /dev/ttyUSB0
;upload_port = /dev/ttyACM0
build_flags = 
            -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC -Os
; 	         -D LED_BUILTIN=PC13

lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:generic_stlinkv2] ;Usando un STLink v2
platform = ststm32
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
framework = arduino
;debug_tool = stlink
upload_protocol = stlink ; Usando openocd, grabacion y depuracion
upload_flags=
            -c set CPUTAPID 0x2ba01477 ; Para flashear chip CLONES STM32 con STLink
;upload_protocol = custom   ; Usando st-flash
;upload_command = st-flash --reset write $SOURCE 0x8000000

build_flags = 
            ;-D LED_BUILTIN=PC13
            -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC -Os
lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1

[env:generic_qemu] ; Usando qemu, https://lcgamboa.github.io/picsimlab_docs/0.9.2/armgdbDebug.html#x50-490006.3.1
platform = ststm32
board = bluepill_f103c8_128k
board_build.mcu = stm32f103c8t6
;board_build.core = maple
framework = arduino

upload_protocol = custom
;upload_command = C:\"Program Files"\PicsimLab\picsimlab_tool.exe loadbin "$BUILD
upload_command = /usr/bin/picsimlab_tool loadbin "$BUILD_DIR/firmware.bin"
build_type = debug
debug_tool = custom
debug_port = localhost:1234
debug_build_flags = -O2 -g
debug_init_break = tbreak main
debug_init_cmds =
                define pio_reset_halt_target
                monitor system_reset
                end
                define pio_reset_run_target
                monitor system_reset
                end
                target extended-remote $DEBUG_PORT
                $LOAD_CMDS
                pio_reset_halt_target
                $INIT_BREAK
lib_deps =
            adafruit/Adafruit GFX Library@^1.11.9
            adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.3
            https://github.com/kr4fty/ai-rotary-encoder.git
            br3ttb/PID@^1.2.1